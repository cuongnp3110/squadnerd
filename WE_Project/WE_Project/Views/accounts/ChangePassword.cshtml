@model WE_Project.Models.account

@{
    ViewBag.Title = "ChangePassword";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(model => model.account_id)
    <div class="row">
        <div class="col-lg-2"></div>
        <div class="col-lg-6">
            <!-- Form Basic -->
            <div class="card mb-4">
                <div class="card-header py-3 d-flex flex-row align-items-center justify-content-between">
                    <h6 class="m-0 font-weight-bold text-primary">Change password</h6>
                </div>
                <div class="card-body">
                    <form>

                        <div class="form-group" hidden>
                            <label>Email</label>
                            @*<label>@Html.LabelFor(model => model.username, htmlAttributes: new { @class = "control-label" })</label>*@
                            @Html.EditorFor(model => model.email, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.email, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group">
                            <label>Current password</label>
                            @Html.EditorFor(model => model.CurrentPassword, new { htmlAttributes = new { @class = "form-control ", Type = "Password", @Value = "" } })
                            @Html.ValidationMessageFor(model => model.CurrentPassword, "", new { @class = "text-danger" })
                            @if (ViewBag.ErrorMessage != null && ViewBag.ErrorMessage != "")
                            {
                                <div class="text-danger">@ViewBag.ErrorMessage</div>
                            }

                        </div>

                        <div class="form-group">
                            <label>Password</label>
                            @*<label>@Html.LabelFor(model => model.password, htmlAttributes: new { @class = "control-label" })</label>*@
                            @Html.EditorFor(model => model.password, new { htmlAttributes = new { @class = "form-control ", Type = "Password", @Value = "", @id = "Pass", @onchange = ("PassCheck()") } })
                            @Html.ValidationMessageFor(model => model.password, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group">
                            <label>Confirm password</label>
                            @Html.EditorFor(model => model.ConfirmPassword, new { htmlAttributes = new { @class = "form-control", Type = "Password", @Value = "", @id = "Confirm", @onchange = ("PassCheck()") } })
                            @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group" hidden>
                            <label>State</label>
                            @*<label>@Html.LabelFor(model => model.state, htmlAttributes: new { @class = "control-label" })</label>*@
                            @Html.EditorFor(model => model.state, new { htmlAttributes = new { @class = "form-control " } })
                            @Html.ValidationMessageFor(model => model.state, "", new { @class = "text-danger" })
                        </div>


                        <div class="form-group" hidden>
                            <label>Full Name</label>
                            @Html.EditorFor(model => model.fname, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.fname, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group" hidden>
                            <label>Gender</label>
                            @Html.DropDownListFor(model => model.gender, new SelectList(
                        new List<Object> { new { value = false, text = "Female" }, new { value = true, text = "Male" } }, "value", "text"), new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.gender, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group" hidden>
                            <label>Phone</label>
                            @Html.EditorFor(model => model.phone, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.phone, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group" hidden>
                            <label>Position</label>
                            @Html.EditorFor(model => model.position, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.position, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group" hidden>
                            <label>Department</label>
                            @Html.DropDownList("department_id", null, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.department_id, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group" hidden>
                            <label>Avatar</label>
                            @Html.EditorFor(model => model.img, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.img, "", new { @class = "text-danger" })
                        </div>
                        <input type="submit" value="Save" class="btn btn-primary" />
                    </form>
                </div>
            </div>
        </div>
    </div>
}